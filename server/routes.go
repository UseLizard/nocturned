package server

func (s *Server) registerRoutes() {
	s.router.HandleFunc("/ws", s.handleWebSocket)
	s.router.HandleFunc("/info", corsMiddleware(s.handleInfo))
	s.router.HandleFunc("/bluetooth/pairing/accept", corsMiddleware(s.handleAcceptPairing))
	s.router.HandleFunc("/bluetooth/pairing/deny", corsMiddleware(s.handleDenyPairing))
	s.router.HandleFunc("/bluetooth/info/", corsMiddleware(s.handleDeviceInfo))
	s.router.HandleFunc("/bluetooth/remove/", corsMiddleware(s.handleRemoveDevice))
	s.router.HandleFunc("/bluetooth/connect/", corsMiddleware(s.handleConnectDevice))
	s.router.HandleFunc("/bluetooth/disconnect/", corsMiddleware(s.handleDisconnectDevice))
	s.router.HandleFunc("/bluetooth/network", corsMiddleware(s.handleBluetoothNetworkStatus))
	s.router.HandleFunc("/bluetooth/network/", corsMiddleware(s.handleConnectNetwork))
	s.router.HandleFunc("/bluetooth/devices", corsMiddleware(s.handleGetDevices))
	s.router.HandleFunc("/device/brightness", corsMiddleware(s.handleGetBrightness))
	s.router.HandleFunc("/device/brightness/", corsMiddleware(s.handleSetBrightness))
	s.router.HandleFunc("/device/resetcounter", corsMiddleware(s.handleResetCounter))
	s.router.HandleFunc("/device/factoryreset", corsMiddleware(s.handleFactoryReset))
	s.router.HandleFunc("/device/power/shutdown", corsMiddleware(s.handleShutdown))
	s.router.HandleFunc("/device/power/reboot", corsMiddleware(s.handleReboot))
	s.router.HandleFunc("/device/date/settimezone", corsMiddleware(s.handleSetTimezone))
	s.router.HandleFunc("/device/date", corsMiddleware(s.handleGetDate))
	s.router.HandleFunc("/update", corsMiddleware(s.handleUpdate))
	s.router.HandleFunc("/update/status", corsMiddleware(s.handleUpdateStatus))
	s.router.HandleFunc("/fetchjson", corsMiddleware(s.handleFetchJSON))
	s.router.HandleFunc("/media/status", corsMiddleware(s.handleMediaStatus))
	s.router.HandleFunc("/media/play", corsMiddleware(s.handleMediaPlay))
	s.router.HandleFunc("/media/pause", corsMiddleware(s.handleMediaPause))
	s.router.HandleFunc("/media/next", corsMiddleware(s.handleMediaNext))
	s.router.HandleFunc("/media/previous", corsMiddleware(s.handleMediaPrevious))
	s.router.HandleFunc("/media/seek/", corsMiddleware(s.handleMediaSeek))
	s.router.HandleFunc("/media/volume/", corsMiddleware(s.handleMediaVolume))
	s.router.HandleFunc("/media/albumart/query", corsMiddleware(s.handleAlbumArtQuery))
	s.router.HandleFunc("/media/albumart", corsMiddleware(s.handleAlbumArt))
	s.router.HandleFunc("/media/simulate", corsMiddleware(s.handleMediaSimulate))
	s.router.HandleFunc("/api/albumart", corsMiddleware(s.handleGetAlbumArt))
	s.router.HandleFunc("/api/albumart/", corsMiddleware(s.handleGetAlbumArtFile))
	s.router.HandleFunc("/api/gradients/latest", corsMiddleware(s.handleGetLatestGradient))
	s.router.HandleFunc("/media/ble/status", corsMiddleware(s.handleBLEStatus))
	s.router.HandleFunc("/media/ble/connect", corsMiddleware(s.handleBLEConnect))
	s.router.HandleFunc("/network/status", corsMiddleware(s.handleNetworkStatus))
	s.router.HandleFunc("/bluetooth/profiles/", corsMiddleware(s.handleGetProfiles))
	s.router.HandleFunc("/bluetooth/profiles/update", corsMiddleware(s.handleUpdateProfile))
	s.router.HandleFunc("/bluetooth/profiles/connect", corsMiddleware(s.handleConnectProfile))
	s.router.HandleFunc("/bluetooth/profiles/disconnect/", corsMiddleware(s.handleDisconnectProfile))
	s.router.HandleFunc("/bluetooth/profiles/detect/", corsMiddleware(s.handleDetectProfiles))
}
